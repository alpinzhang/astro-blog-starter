---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro'

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.md');
  // return [
  //   { params: { tag: "astro" }, props: {posts: allPosts} },
  //   { params: { tag: "successes" }, props: {posts: allPosts} },
  //   { params: { tag: "community" }, props: {posts: allPosts} },
  //   { params: { tag: "blogging" }, props: {posts: allPosts} },
  //   { params: { tag: "setbacks" }, props: {posts: allPosts} },
  //   { params: { tag: "learning in public" }, props: {posts: allPosts} },
  //   { params: { tag: "前端" }, props: {posts: allPosts} },
  // ];
  // 动态获取所有标签
  const uniqueTags = [...new Set(allPosts.map((post: {frontmatter: {tags: string[]}}) => post.frontmatter.tags).flat())];
  // 返回 params 和 props 组成的对象数组
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
// const filteredPosts = posts.filter((post) => post.frontmatter.tags?.includes(tag));
---
<BaseLayout pageTitle={tag}>
  <p>包含「{tag}」标签的文章</p>
  <ul>
    { posts.map(post => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
</BaseLayout>